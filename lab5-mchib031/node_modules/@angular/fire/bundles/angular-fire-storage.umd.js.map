{"version":3,"file":"angular-fire-storage.umd.js","sources":["../../../src/storage/storage.ts","../../../src/storage/storage.module.ts","../../../src/storage/rxfire.ts","../../../src/storage/firebase.ts","../../../src/storage/angular-fire-storage.ts"],"sourcesContent":["import { FirebaseStorage } from 'firebase/storage';\nimport { ɵgetAllInstancesOf } from '@angular/fire';\nimport { from, timer } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\n\n// see notes in core/firebase.app.module.ts for why we're building the class like this\n// tslint:disable-next-line:no-empty-interface\nexport interface Storage extends FirebaseStorage {}\n\nexport class Storage {\n  constructor(auth: FirebaseStorage) {\n    return auth;\n  }\n}\n\nexport const STORAGE_PROVIDER_NAME = 'storage';\n\n// tslint:disable-next-line:no-empty-interface\nexport interface StorageInstances extends Array<FirebaseStorage> {}\n\nexport class StorageInstances {\n  constructor() {\n    return ɵgetAllInstancesOf<FirebaseStorage>(STORAGE_PROVIDER_NAME);\n  }\n}\n\nexport const storageInstance$ = timer(0, 300).pipe(\n  concatMap(() => from(ɵgetAllInstancesOf<FirebaseStorage>(STORAGE_PROVIDER_NAME))),\n  distinct(),\n);\n","import { NgModule, Optional, NgZone, InjectionToken, ModuleWithProviders } from '@angular/core';\nimport { FirebaseStorage } from 'firebase/storage';\nimport { ɵgetDefaultInstanceOf, ɵmemoizeInstance, ɵAngularFireSchedulers, VERSION } from '@angular/fire';\nimport { Storage, StorageInstances, STORAGE_PROVIDER_NAME } from './storage';\nimport { FirebaseApps, FirebaseApp } from '@angular/fire/app';\nimport { AuthInstances } from '@angular/fire/auth';\nimport { registerVersion } from 'firebase/app';\n\nexport const PROVIDED_STORAGE_INSTANCES = new InjectionToken<Storage[]>('angularfire2.storage-instances');\n\nexport function defaultStorageInstanceFactory(provided: FirebaseStorage[]|undefined, defaultApp: FirebaseApp) {\n  const defaultAuth = ɵgetDefaultInstanceOf<FirebaseStorage>(STORAGE_PROVIDER_NAME, provided, defaultApp);\n  return new Storage(defaultAuth);\n}\n\nexport function storageInstanceFactory(fn: () => FirebaseStorage) {\n  return (zone: NgZone) => {\n    const storage = ɵmemoizeInstance<FirebaseStorage>(fn, zone);\n    return new Storage(storage);\n  };\n}\n\nconst STORAGE_INSTANCES_PROVIDER = {\n  provide: StorageInstances,\n  deps: [\n    [new Optional(), PROVIDED_STORAGE_INSTANCES ],\n  ]\n};\n\nconst DEFAULT_STORAGE_INSTANCE_PROVIDER = {\n  provide: Storage,\n  useFactory: defaultStorageInstanceFactory,\n  deps: [\n    [new Optional(), PROVIDED_STORAGE_INSTANCES ],\n    FirebaseApp,\n  ]\n};\n\n@NgModule({\n  providers: [\n    DEFAULT_STORAGE_INSTANCE_PROVIDER,\n    STORAGE_INSTANCES_PROVIDER,\n  ]\n})\nexport class StorageModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'gcs');\n  }\n}\n\nexport function provideStorage(fn: () => FirebaseStorage): ModuleWithProviders<StorageModule> {\n  return {\n    ngModule: StorageModule,\n    providers: [{\n      provide: PROVIDED_STORAGE_INSTANCES,\n      useFactory: storageInstanceFactory(fn),\n      multi: true,\n      deps: [\n        NgZone,\n        ɵAngularFireSchedulers,\n        FirebaseApps,\n        // Defensively load Auth first, if provided\n        [new Optional(), AuthInstances ],\n      ]\n    }]\n  };\n}\n","// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nimport { ɵzoneWrap } from '@angular/fire';\nimport {\n  fromTask as _fromTask,\n  percentage as _percentage\n} from 'rxfire/storage';\n\nexport const fromTask = ɵzoneWrap(_fromTask, true);\nexport const percentage = ɵzoneWrap(_percentage, true);\n","// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nexport * from 'firebase/storage';\nimport { ɵzoneWrap } from '@angular/fire';\nimport {\n  connectStorageEmulator as _connectStorageEmulator,\n  deleteObject as _deleteObject,\n  getDownloadURL as _getDownloadURL,\n  getMetadata as _getMetadata,\n  getStorage as _getStorage,\n  list as _list,\n  listAll as _listAll,\n  ref as _ref,\n  updateMetadata as _updateMetadata,\n  uploadBytes as _uploadBytes,\n  uploadBytesResumable as _uploadBytesResumable,\n  uploadString as _uploadString\n} from 'firebase/storage';\n\nexport const connectStorageEmulator = ɵzoneWrap(_connectStorageEmulator, true);\nexport const deleteObject = ɵzoneWrap(_deleteObject, true);\nexport const getDownloadURL = ɵzoneWrap(_getDownloadURL, true);\nexport const getMetadata = ɵzoneWrap(_getMetadata, true);\nexport const getStorage = ɵzoneWrap(_getStorage, true);\nexport const list = ɵzoneWrap(_list, true);\nexport const listAll = ɵzoneWrap(_listAll, true);\nexport const ref = ɵzoneWrap(_ref, true);\nexport const updateMetadata = ɵzoneWrap(_updateMetadata, true);\nexport const uploadBytes = ɵzoneWrap(_uploadBytes, true);\nexport const uploadBytesResumable = ɵzoneWrap(_uploadBytesResumable, true);\nexport const uploadString = ɵzoneWrap(_uploadString, true);\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["ɵgetAllInstancesOf","timer","concatMap","from","distinct","InjectionToken","ɵgetDefaultInstanceOf","ɵmemoizeInstance","Optional","FirebaseApp","registerVersion","VERSION","NgModule","NgZone","ɵAngularFireSchedulers","FirebaseApps","AuthInstances","ɵzoneWrap","_fromTask","_percentage","_connectStorageEmulator","_deleteObject","_getDownloadURL","_getMetadata","_getStorage","_list","_listAll","_ref","_updateMetadata","_uploadBytes","_uploadBytesResumable","_uploadString"],"mappings":"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"}