(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/fire'), require('rxjs'), require('rxjs/operators'), require('@angular/core'), require('@angular/fire/app'), require('firebase/app'), require('rxfire/performance'), require('firebase/performance')) :
    typeof define === 'function' && define.amd ? define('@angular/fire/performance', ['exports', '@angular/fire', 'rxjs', 'rxjs/operators', '@angular/core', '@angular/fire/app', 'firebase/app', 'rxfire/performance', 'firebase/performance'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.angular = global.angular || {}, global.angular.fire = global.angular.fire || {}, global.angular.fire.performance = {}), global.angular.fire, global.rxjs, global.rxjs.operators, global.ng.core, global.angular.fire.app, global.app$1, global['rxfire-performance'], global['firebase-performance']));
}(this, (function (exports, fire, rxjs, operators, i0, app, app$1, performance$1, performance) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    var Performance = /** @class */ (function () {
        function Performance(performance) {
            return performance;
        }
        return Performance;
    }());
    var PERFORMANCE_PROVIDER_NAME = 'performance';
    var PerformanceInstances = /** @class */ (function () {
        function PerformanceInstances() {
            return fire.ɵgetAllInstancesOf(PERFORMANCE_PROVIDER_NAME);
        }
        return PerformanceInstances;
    }());
    var performanceInstance$ = rxjs.timer(0, 300).pipe(operators.concatMap(function () { return rxjs.from(fire.ɵgetAllInstancesOf(PERFORMANCE_PROVIDER_NAME)); }), operators.distinct());

    var PROVIDED_PERFORMANCE_INSTANCES = new i0.InjectionToken('angularfire2.performance-instances');
    function defaultPerformanceInstanceFactory(provided, defaultApp) {
        var defaultPerformance = fire.ɵgetDefaultInstanceOf(PERFORMANCE_PROVIDER_NAME, provided, defaultApp);
        return new Performance(defaultPerformance);
    }
    function performanceInstanceFactory(fn) {
        return function (zone) {
            var performance = fire.ɵmemoizeInstance(fn, zone);
            return new Performance(performance);
        };
    }
    var PERFORMANCE_INSTANCES_PROVIDER = {
        provide: PerformanceInstances,
        deps: [
            [new i0.Optional(), PROVIDED_PERFORMANCE_INSTANCES],
        ]
    };
    var DEFAULT_PERFORMANCE_INSTANCE_PROVIDER = {
        provide: Performance,
        useFactory: defaultPerformanceInstanceFactory,
        deps: [
            [new i0.Optional(), PROVIDED_PERFORMANCE_INSTANCES],
            app.FirebaseApp,
        ]
    };
    var PerformanceModule = /** @class */ (function () {
        function PerformanceModule() {
            app$1.registerVersion('angularfire', fire.VERSION.full, 'perf');
        }
        return PerformanceModule;
    }());
    PerformanceModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.1.3", ngImport: i0__namespace, type: PerformanceModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    PerformanceModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.1.3", ngImport: i0__namespace, type: PerformanceModule });
    PerformanceModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.1.3", ngImport: i0__namespace, type: PerformanceModule, providers: [
            DEFAULT_PERFORMANCE_INSTANCE_PROVIDER,
            PERFORMANCE_INSTANCES_PROVIDER,
        ] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.1.3", ngImport: i0__namespace, type: PerformanceModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        providers: [
                            DEFAULT_PERFORMANCE_INSTANCE_PROVIDER,
                            PERFORMANCE_INSTANCES_PROVIDER,
                        ]
                    }]
            }], ctorParameters: function () { return []; } });
    function providePerformance(fn) {
        return {
            ngModule: PerformanceModule,
            providers: [{
                    provide: PROVIDED_PERFORMANCE_INSTANCES,
                    useFactory: performanceInstanceFactory(fn),
                    multi: true,
                    deps: [
                        i0.NgZone,
                        fire.ɵAngularFireSchedulers,
                        app.FirebaseApps,
                    ]
                }]
        };
    }

    // DO NOT MODIFY, this file is autogenerated by tools/build.ts
    var traceUntil = fire.ɵzoneWrap(performance$1.traceUntil, true);
    var traceWhile = fire.ɵzoneWrap(performance$1.traceWhile, true);
    var traceUntilComplete = fire.ɵzoneWrap(performance$1.traceUntilComplete, true);
    var traceUntilFirst = fire.ɵzoneWrap(performance$1.traceUntilFirst, true);

    // DO NOT MODIFY, this file is autogenerated by tools/build.ts
    var getPerformance = fire.ɵzoneWrap(performance.getPerformance, true);
    var initializePerformance = fire.ɵzoneWrap(performance.initializePerformance, true);
    var trace = fire.ɵzoneWrap(performance.trace, true);

    /**
     * Generated bundle index. Do not edit.
     */

    exports.Performance = Performance;
    exports.PerformanceInstances = PerformanceInstances;
    exports.PerformanceModule = PerformanceModule;
    exports.getPerformance = getPerformance;
    exports.initializePerformance = initializePerformance;
    exports.performanceInstance$ = performanceInstance$;
    exports.providePerformance = providePerformance;
    exports.trace = trace;
    exports.traceUntil = traceUntil;
    exports.traceUntilComplete = traceUntilComplete;
    exports.traceUntilFirst = traceUntilFirst;
    exports.traceWhile = traceWhile;
    Object.keys(performance).forEach(function (k) {
        if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
            enumerable: true,
            get: function () {
                return performance[k];
            }
        });
    });

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=angular-fire-performance.umd.js.map
