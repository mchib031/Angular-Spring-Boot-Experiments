(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/fire'), require('rxjs'), require('rxjs/operators'), require('@angular/core'), require('firebase/analytics'), require('@angular/fire/app'), require('firebase/app')) :
    typeof define === 'function' && define.amd ? define('@angular/fire/analytics', ['exports', '@angular/fire', 'rxjs', 'rxjs/operators', '@angular/core', 'firebase/analytics', '@angular/fire/app', 'firebase/app'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.angular = global.angular || {}, global.angular.fire = global.angular.fire || {}, global.angular.fire.analytics = {}), global.angular.fire, global.rxjs, global.rxjs.operators, global.ng.core, global['firebase-analytics'], global.angular.fire.app, global.app$1));
}(this, (function (exports, fire, rxjs, operators, i0, analytics, app, app$1) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    var Analytics = /** @class */ (function () {
        function Analytics(analytics) {
            return analytics;
        }
        return Analytics;
    }());
    var ANALYTICS_PROVIDER_NAME = 'analytics';
    var AnalyticsInstances = /** @class */ (function () {
        function AnalyticsInstances() {
            return fire.ɵgetAllInstancesOf(ANALYTICS_PROVIDER_NAME);
        }
        return AnalyticsInstances;
    }());
    var analyticInstance$ = rxjs.timer(0, 300).pipe(operators.concatMap(function () { return rxjs.from(fire.ɵgetAllInstancesOf(ANALYTICS_PROVIDER_NAME)); }), operators.distinct());

    var PROVIDED_ANALYTICS_INSTANCES = new i0.InjectionToken('angularfire2.analytics-instances');
    var IS_SUPPORTED = new i0.InjectionToken('angularfire2.analytics.isSupported');
    var isSupportedSymbol = Symbol('angularfire2.analytics.isSupported');
    function defaultAnalyticsInstanceFactory(isSupported, provided, defaultApp) {
        var defaultAnalytics = isSupported ?
            fire.ɵgetDefaultInstanceOf(ANALYTICS_PROVIDER_NAME, provided, defaultApp) :
            undefined;
        return new Analytics(defaultAnalytics);
    }
    function analyticsInstanceFactory(fn) {
        return function (zone, isSupported) {
            var analytics = isSupported ? fire.ɵmemoizeInstance(fn, zone) : undefined;
            return new Analytics(analytics);
        };
    }
    var ANALYTICS_INSTANCES_PROVIDER = {
        provide: AnalyticsInstances,
        deps: [
            [new i0.Optional(), PROVIDED_ANALYTICS_INSTANCES],
        ]
    };
    var DEFAULT_ANALYTICS_INSTANCE_PROVIDER = {
        provide: Analytics,
        useFactory: defaultAnalyticsInstanceFactory,
        deps: [
            IS_SUPPORTED,
            [new i0.Optional(), PROVIDED_ANALYTICS_INSTANCES],
            app.FirebaseApp,
        ]
    };
    var AnalyticsModule = /** @class */ (function () {
        function AnalyticsModule() {
            app$1.registerVersion('angularfire', fire.VERSION.full, 'analytics');
        }
        return AnalyticsModule;
    }());
    AnalyticsModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.1.3", ngImport: i0__namespace, type: AnalyticsModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AnalyticsModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.1.3", ngImport: i0__namespace, type: AnalyticsModule });
    AnalyticsModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.1.3", ngImport: i0__namespace, type: AnalyticsModule, providers: [
            DEFAULT_ANALYTICS_INSTANCE_PROVIDER,
            ANALYTICS_INSTANCES_PROVIDER,
            {
                provide: i0.APP_INITIALIZER,
                useValue: function () { return analytics.isSupported().then(function (it) { return globalThis[isSupportedSymbol] = it; }); },
                multi: true,
            },
        ] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.1.3", ngImport: i0__namespace, type: AnalyticsModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        providers: [
                            DEFAULT_ANALYTICS_INSTANCE_PROVIDER,
                            ANALYTICS_INSTANCES_PROVIDER,
                            {
                                provide: i0.APP_INITIALIZER,
                                useValue: function () { return analytics.isSupported().then(function (it) { return globalThis[isSupportedSymbol] = it; }); },
                                multi: true,
                            },
                        ]
                    }]
            }], ctorParameters: function () { return []; } });
    function provideAnalytics(fn) {
        return {
            ngModule: AnalyticsModule,
            providers: [{
                    provide: IS_SUPPORTED,
                    useFactory: function () { return globalThis[isSupportedSymbol]; },
                }, {
                    provide: PROVIDED_ANALYTICS_INSTANCES,
                    useFactory: analyticsInstanceFactory(fn),
                    multi: true,
                    deps: [
                        i0.NgZone,
                        IS_SUPPORTED,
                        fire.ɵAngularFireSchedulers,
                        app.FirebaseApps,
                    ]
                }]
        };
    }

    // DO NOT MODIFY, this file is autogenerated by tools/build.ts
    var getAnalytics = fire.ɵzoneWrap(analytics.getAnalytics, true);
    var initializeAnalytics = fire.ɵzoneWrap(analytics.initializeAnalytics, true);
    var isSupported = fire.ɵzoneWrap(analytics.isSupported, true);
    var logEvent = fire.ɵzoneWrap(analytics.logEvent, true);
    var setAnalyticsCollectionEnabled = fire.ɵzoneWrap(analytics.setAnalyticsCollectionEnabled, true);
    var setCurrentScreen = fire.ɵzoneWrap(analytics.setCurrentScreen, true);
    var settings = fire.ɵzoneWrap(analytics.settings, true);
    var setUserId = fire.ɵzoneWrap(analytics.setUserId, true);
    var setUserProperties = fire.ɵzoneWrap(analytics.setUserProperties, true);

    /**
     * Generated bundle index. Do not edit.
     */

    exports.Analytics = Analytics;
    exports.AnalyticsInstances = AnalyticsInstances;
    exports.AnalyticsModule = AnalyticsModule;
    exports.analyticInstance$ = analyticInstance$;
    exports.getAnalytics = getAnalytics;
    exports.initializeAnalytics = initializeAnalytics;
    exports.isSupported = isSupported;
    exports.logEvent = logEvent;
    exports.provideAnalytics = provideAnalytics;
    exports.setAnalyticsCollectionEnabled = setAnalyticsCollectionEnabled;
    exports.setCurrentScreen = setCurrentScreen;
    exports.setUserId = setUserId;
    exports.setUserProperties = setUserProperties;
    exports.settings = settings;
    Object.keys(analytics).forEach(function (k) {
        if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
            enumerable: true,
            get: function () {
                return analytics[k];
            }
        });
    });

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=angular-fire-analytics.umd.js.map
