(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/fire'), require('rxjs'), require('rxjs/operators'), require('@angular/core'), require('firebase/messaging'), require('@angular/fire/app'), require('firebase/app')) :
    typeof define === 'function' && define.amd ? define('@angular/fire/messaging', ['exports', '@angular/fire', 'rxjs', 'rxjs/operators', '@angular/core', 'firebase/messaging', '@angular/fire/app', 'firebase/app'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.angular = global.angular || {}, global.angular.fire = global.angular.fire || {}, global.angular.fire.messaging = {}), global.angular.fire, global.rxjs, global.rxjs.operators, global.ng.core, global['firebase-messaging'], global.angular.fire.app, global.app$1));
}(this, (function (exports, fire, rxjs, operators, i0, messaging, app, app$1) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    var Messaging = /** @class */ (function () {
        function Messaging(messaging) {
            return messaging;
        }
        return Messaging;
    }());
    var MESSAGING_PROVIDER_NAME = 'messaging';
    var MessagingInstances = /** @class */ (function () {
        function MessagingInstances() {
            return fire.ɵgetAllInstancesOf(MESSAGING_PROVIDER_NAME);
        }
        return MessagingInstances;
    }());
    var messagingInstance$ = rxjs.timer(0, 300).pipe(operators.concatMap(function () { return rxjs.from(fire.ɵgetAllInstancesOf(MESSAGING_PROVIDER_NAME)); }), operators.distinct());

    var PROVIDED_MESSAGING_INSTANCES = new i0.InjectionToken('angularfire2.messaging-instances');
    var IS_SUPPORTED = new i0.InjectionToken('angularfire2.messaging.isSupported');
    var isSupportedSymbol = Symbol('angularfire2.messaging.isSupported');
    function defaultMessagingInstanceFactory(isSupported, provided, defaultApp) {
        var defaultAuth = isSupported ?
            fire.ɵgetDefaultInstanceOf(MESSAGING_PROVIDER_NAME, provided, defaultApp) :
            undefined;
        return new Messaging(defaultAuth);
    }
    function messagingInstanceFactory(fn) {
        return function (zone, isSupported) {
            var messaging = isSupported ? fire.ɵmemoizeInstance(fn, zone) : undefined;
            return new Messaging(messaging);
        };
    }
    var MESSAGING_INSTANCES_PROVIDER = {
        provide: MessagingInstances,
        deps: [
            [new i0.Optional(), PROVIDED_MESSAGING_INSTANCES],
        ]
    };
    var DEFAULT_MESSAGING_INSTANCE_PROVIDER = {
        provide: Messaging,
        useFactory: defaultMessagingInstanceFactory,
        deps: [
            IS_SUPPORTED,
            [new i0.Optional(), PROVIDED_MESSAGING_INSTANCES],
            app.FirebaseApp,
        ]
    };
    var MessagingModule = /** @class */ (function () {
        function MessagingModule() {
            app$1.registerVersion('angularfire', fire.VERSION.full, 'fcm');
        }
        return MessagingModule;
    }());
    MessagingModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.1.3", ngImport: i0__namespace, type: MessagingModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    MessagingModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.1.3", ngImport: i0__namespace, type: MessagingModule });
    MessagingModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.1.3", ngImport: i0__namespace, type: MessagingModule, providers: [
            DEFAULT_MESSAGING_INSTANCE_PROVIDER,
            MESSAGING_INSTANCES_PROVIDER,
            {
                provide: i0.APP_INITIALIZER,
                useValue: function () { return messaging.isSupported().then(function (it) { return globalThis[isSupportedSymbol] = it; }); },
                multi: true,
            },
        ] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.1.3", ngImport: i0__namespace, type: MessagingModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        providers: [
                            DEFAULT_MESSAGING_INSTANCE_PROVIDER,
                            MESSAGING_INSTANCES_PROVIDER,
                            {
                                provide: i0.APP_INITIALIZER,
                                useValue: function () { return messaging.isSupported().then(function (it) { return globalThis[isSupportedSymbol] = it; }); },
                                multi: true,
                            },
                        ]
                    }]
            }], ctorParameters: function () { return []; } });
    function provideMessaging(fn) {
        return {
            ngModule: MessagingModule,
            providers: [{
                    provide: IS_SUPPORTED,
                    useFactory: function () { return globalThis[isSupportedSymbol]; },
                }, {
                    provide: PROVIDED_MESSAGING_INSTANCES,
                    useFactory: messagingInstanceFactory(fn),
                    multi: true,
                    deps: [
                        i0.NgZone,
                        IS_SUPPORTED,
                        fire.ɵAngularFireSchedulers,
                        app.FirebaseApps,
                    ],
                }]
        };
    }

    // DO NOT MODIFY, this file is autogenerated by tools/build.ts
    var deleteToken = fire.ɵzoneWrap(messaging.deleteToken, true);
    var getMessaging = fire.ɵzoneWrap(messaging.getMessaging, true);
    var getToken = fire.ɵzoneWrap(messaging.getToken, true);
    var isSupported = fire.ɵzoneWrap(messaging.isSupported, true);
    var onMessage = fire.ɵzoneWrap(messaging.onMessage, false);

    /**
     * Generated bundle index. Do not edit.
     */

    exports.Messaging = Messaging;
    exports.MessagingInstances = MessagingInstances;
    exports.MessagingModule = MessagingModule;
    exports.deleteToken = deleteToken;
    exports.getMessaging = getMessaging;
    exports.getToken = getToken;
    exports.isSupported = isSupported;
    exports.messagingInstance$ = messagingInstance$;
    exports.onMessage = onMessage;
    exports.provideMessaging = provideMessaging;
    Object.keys(messaging).forEach(function (k) {
        if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
            enumerable: true,
            get: function () {
                return messaging[k];
            }
        });
    });

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=angular-fire-messaging.umd.js.map
