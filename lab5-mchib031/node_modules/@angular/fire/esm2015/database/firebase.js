// DO NOT MODIFY, this file is autogenerated by tools/build.ts
export * from 'firebase/database';
import { ɵzoneWrap } from '@angular/fire';
import { child as _child, connectDatabaseEmulator as _connectDatabaseEmulator, enableLogging as _enableLogging, endAt as _endAt, endBefore as _endBefore, equalTo as _equalTo, get as _get, getDatabase as _getDatabase, goOffline as _goOffline, goOnline as _goOnline, increment as _increment, limitToFirst as _limitToFirst, limitToLast as _limitToLast, off as _off, onChildAdded as _onChildAdded, onChildChanged as _onChildChanged, onChildMoved as _onChildMoved, onChildRemoved as _onChildRemoved, onDisconnect as _onDisconnect, onValue as _onValue, orderByChild as _orderByChild, orderByKey as _orderByKey, orderByPriority as _orderByPriority, orderByValue as _orderByValue, push as _push, query as _query, ref as _ref, refFromURL as _refFromURL, remove as _remove, runTransaction as _runTransaction, serverTimestamp as _serverTimestamp, set as _set, setPriority as _setPriority, setWithPriority as _setWithPriority, startAfter as _startAfter, startAt as _startAt, update as _update } from 'firebase/database';
export const child = ɵzoneWrap(_child, true);
export const connectDatabaseEmulator = ɵzoneWrap(_connectDatabaseEmulator, true);
export const enableLogging = ɵzoneWrap(_enableLogging, true);
export const endAt = ɵzoneWrap(_endAt, true);
export const endBefore = ɵzoneWrap(_endBefore, true);
export const equalTo = ɵzoneWrap(_equalTo, true);
export const get = ɵzoneWrap(_get, true);
export const getDatabase = ɵzoneWrap(_getDatabase, true);
export const goOffline = ɵzoneWrap(_goOffline, true);
export const goOnline = ɵzoneWrap(_goOnline, true);
export const increment = ɵzoneWrap(_increment, true);
export const limitToFirst = ɵzoneWrap(_limitToFirst, true);
export const limitToLast = ɵzoneWrap(_limitToLast, true);
export const off = ɵzoneWrap(_off, true);
export const onChildAdded = ɵzoneWrap(_onChildAdded, true);
export const onChildChanged = ɵzoneWrap(_onChildChanged, true);
export const onChildMoved = ɵzoneWrap(_onChildMoved, true);
export const onChildRemoved = ɵzoneWrap(_onChildRemoved, true);
export const onDisconnect = ɵzoneWrap(_onDisconnect, true);
export const onValue = ɵzoneWrap(_onValue, true);
export const orderByChild = ɵzoneWrap(_orderByChild, true);
export const orderByKey = ɵzoneWrap(_orderByKey, true);
export const orderByPriority = ɵzoneWrap(_orderByPriority, true);
export const orderByValue = ɵzoneWrap(_orderByValue, true);
export const push = ɵzoneWrap(_push, true);
export const query = ɵzoneWrap(_query, true);
export const ref = ɵzoneWrap(_ref, true);
export const refFromURL = ɵzoneWrap(_refFromURL, true);
export const remove = ɵzoneWrap(_remove, true);
export const runTransaction = ɵzoneWrap(_runTransaction, true);
export const serverTimestamp = ɵzoneWrap(_serverTimestamp, true);
export const set = ɵzoneWrap(_set, true);
export const setPriority = ɵzoneWrap(_setPriority, true);
export const setWithPriority = ɵzoneWrap(_setWithPriority, true);
export const startAfter = ɵzoneWrap(_startAfter, true);
export const startAt = ɵzoneWrap(_startAt, true);
export const update = ɵzoneWrap(_update, true);
//# sourceMappingURL=data:application/json;base64,