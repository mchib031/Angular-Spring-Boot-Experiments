"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setTriggerRegion = void 0;
const backend = require("./backend");
const storage = require("../../gcp/storage");
const error_1 = require("../../error");
async function setTriggerRegion(want, have) {
    var _a;
    for (const wantFn of want) {
        if (wantFn.platform === "gcfv1" || !backend.isEventTrigger(wantFn.trigger)) {
            continue;
        }
        const match = (_a = have.find(backend.sameFunctionName(wantFn))) === null || _a === void 0 ? void 0 : _a.trigger;
        if (match === null || match === void 0 ? void 0 : match.region) {
            wantFn.trigger.region = match.region;
        }
        else {
            await setTriggerRegionFromTriggerType(wantFn.trigger);
        }
    }
}
exports.setTriggerRegion = setTriggerRegion;
async function setTriggerRegionFromTriggerType(trigger) {
    if (trigger.eventFilters.bucket) {
        try {
            trigger.region = (await storage.getBucket(trigger.eventFilters.bucket)).location.toLowerCase();
        }
        catch (err) {
            throw new error_1.FirebaseError("Can't find the storage bucket region", { original: err });
        }
    }
}
