{"ast":null,"code":"import _asyncToGenerator from \"/Users/mary/Dropbox/Mac/Documents/lab04/lab04/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { ao as _isIOS7Or8, ap as debugAssert, aq as _isIOS, ar as _isAndroid, as as _fail, at as _getRedirectUrl, au as _getProjectConfig, av as _createError, aw as _assert, ax as _getInstance, b as browserLocalPersistence, ay as _persistenceKeyName, az as AuthEventManager, a as browserSessionPersistence, aA as _getRedirectResult, aB as _clearRedirectOutcomes, aC as _castAuth } from './index-112b09e1.js';\nexport { A as ActionCodeOperation, ac as ActionCodeURL, G as AuthCredential, C as AuthErrorCodes, aE as AuthImpl, aH as AuthPopup, H as EmailAuthCredential, L as EmailAuthProvider, M as FacebookAuthProvider, F as FactorId, aI as FetchProvider, Q as GithubAuthProvider, N as GoogleAuthProvider, I as OAuthCredential, T as OAuthProvider, O as OperationType, J as PhoneAuthCredential, P as PhoneAuthProvider, m as PhoneMultiFactorGenerator, o as ProviderId, R as RecaptchaVerifier, aJ as SAMLAuthCredential, U as SAMLAuthProvider, S as SignInMethod, V as TwitterAuthProvider, aD as UserImpl, aw as _assert, aC as _castAuth, as as _fail, aG as _generateEventId, aF as _getClientVersion, ax as _getInstance, aA as _getRedirectResult, ay as _persistenceKeyName, a1 as applyActionCode, b as browserLocalPersistence, k as browserPopupRedirectResolver, a as browserSessionPersistence, a2 as checkActionCode, a0 as confirmPasswordReset, E as connectAuthEmulator, a4 as createUserWithEmailAndPassword, z as debugErrorMap, y as deleteUser, a9 as fetchSignInMethodsForEmail, ak as getAdditionalUserInfo, n as getAuth, ah as getIdToken, ai as getIdTokenResult, am as getMultiFactorResolver, j as getRedirectResult, K as inMemoryPersistence, i as indexedDBLocalPersistence, D as initializeAuth, a7 as isSignInWithEmailLink, Y as linkWithCredential, l as linkWithPhoneNumber, d as linkWithPopup, g as linkWithRedirect, an as multiFactor, t as onAuthStateChanged, q as onIdTokenChanged, ad as parseActionCodeURL, B as prodErrorMap, Z as reauthenticateWithCredential, r as reauthenticateWithPhoneNumber, e as reauthenticateWithPopup, h as reauthenticateWithRedirect, al as reload, aa as sendEmailVerification, $ as sendPasswordResetEmail, a6 as sendSignInLinkToEmail, p as setPersistence, W as signInAnonymously, X as signInWithCredential, _ as signInWithCustomToken, a5 as signInWithEmailAndPassword, a8 as signInWithEmailLink, s as signInWithPhoneNumber, c as signInWithPopup, f as signInWithRedirect, x as signOut, aj as unlink, w as updateCurrentUser, af as updateEmail, ag as updatePassword, u as updatePhoneNumber, ae as updateProfile, v as useDeviceLanguage, ab as verifyBeforeUpdateEmail, a3 as verifyPasswordResetCode } from './index-112b09e1.js';\nimport { querystringDecode } from '@firebase/util';\nimport '@firebase/app';\nimport 'tslib';\nimport '@firebase/logger';\nimport '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfunction _cordovaWindow() {\n  return window;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * How long to wait after the app comes back into focus before concluding that\r\n * the user closed the sign in tab.\r\n */\n\n\nconst REDIRECT_TIMEOUT_MS = 2000;\n/**\r\n * Generates the URL for the OAuth handler.\r\n */\n\nfunction _generateHandlerUrl(_x, _x2, _x3) {\n  return _generateHandlerUrl2.apply(this, arguments);\n}\n/**\r\n * Validates that this app is valid for this project configuration\r\n */\n\n\nfunction _generateHandlerUrl2() {\n  _generateHandlerUrl2 = _asyncToGenerator(function* (auth, event, provider) {\n    var _a; // Get the cordova plugins\n\n\n    const {\n      BuildInfo\n    } = _cordovaWindow();\n\n    debugAssert(event.sessionId, 'AuthEvent did not contain a session ID');\n    const sessionDigest = yield computeSha256(event.sessionId);\n    const additionalParams = {};\n\n    if (_isIOS()) {\n      // iOS app identifier\n      additionalParams['ibi'] = BuildInfo.packageName;\n    } else if (_isAndroid()) {\n      // Android app identifier\n      additionalParams['apn'] = BuildInfo.packageName;\n    } else {\n      _fail(auth, \"operation-not-supported-in-this-environment\"\n      /* OPERATION_NOT_SUPPORTED */\n      );\n    } // Add the display name if available\n\n\n    if (BuildInfo.displayName) {\n      additionalParams['appDisplayName'] = BuildInfo.displayName;\n    } // Attached the hashed session ID\n\n\n    additionalParams['sessionId'] = sessionDigest;\n    return _getRedirectUrl(auth, provider, event.type, undefined, (_a = event.eventId) !== null && _a !== void 0 ? _a : undefined, additionalParams);\n  });\n  return _generateHandlerUrl2.apply(this, arguments);\n}\n\nfunction _validateOrigin(_x4) {\n  return _validateOrigin2.apply(this, arguments);\n}\n\nfunction _validateOrigin2() {\n  _validateOrigin2 = _asyncToGenerator(function* (auth) {\n    const {\n      BuildInfo\n    } = _cordovaWindow();\n\n    const request = {};\n\n    if (_isIOS()) {\n      request.iosBundleId = BuildInfo.packageName;\n    } else if (_isAndroid()) {\n      request.androidPackageName = BuildInfo.packageName;\n    } else {\n      _fail(auth, \"operation-not-supported-in-this-environment\"\n      /* OPERATION_NOT_SUPPORTED */\n      );\n    } // Will fail automatically if package name is not authorized\n\n\n    yield _getProjectConfig(auth, request);\n  });\n  return _validateOrigin2.apply(this, arguments);\n}\n\nfunction _performRedirect(handlerUrl) {\n  // Get the cordova plugins\n  const {\n    cordova\n  } = _cordovaWindow();\n\n  return new Promise(resolve => {\n    cordova.plugins.browsertab.isAvailable(browserTabIsAvailable => {\n      let iabRef = null;\n\n      if (browserTabIsAvailable) {\n        cordova.plugins.browsertab.openUrl(handlerUrl);\n      } else {\n        // TODO: Return the inappbrowser ref that's returned from the open call\n        iabRef = cordova.InAppBrowser.open(handlerUrl, _isIOS7Or8() ? '_blank' : '_system', 'location=yes');\n      }\n\n      resolve(iabRef);\n    });\n  });\n}\n/**\r\n * This function waits for app activity to be seen before resolving. It does\r\n * this by attaching listeners to various dom events. Once the app is determined\r\n * to be visible, this promise resolves. AFTER that resolution, the listeners\r\n * are detached and any browser tabs left open will be closed.\r\n */\n\n\nfunction _waitForAppResume(_x5, _x6, _x7) {\n  return _waitForAppResume2.apply(this, arguments);\n}\n/**\r\n * Checks the configuration of the Cordova environment. This has no side effect\r\n * if the configuration is correct; otherwise it throws an error with the\r\n * missing plugin.\r\n */\n\n\nfunction _waitForAppResume2() {\n  _waitForAppResume2 = _asyncToGenerator(function* (auth, eventListener, iabRef) {\n    // Get the cordova plugins\n    const {\n      cordova\n    } = _cordovaWindow();\n\n    let cleanup = () => {};\n\n    try {\n      yield new Promise((resolve, reject) => {\n        let onCloseTimer = null; // DEFINE ALL THE CALLBACKS =====\n\n        function authEventSeen() {\n          var _a; // Auth event was detected. Resolve this promise and close the extra\n          // window if it's still open.\n\n\n          resolve();\n          const closeBrowserTab = (_a = cordova.plugins.browsertab) === null || _a === void 0 ? void 0 : _a.close;\n\n          if (typeof closeBrowserTab === 'function') {\n            closeBrowserTab();\n          } // Close inappbrowser emebedded webview in iOS7 and 8 case if still\n          // open.\n\n\n          if (typeof (iabRef === null || iabRef === void 0 ? void 0 : iabRef.close) === 'function') {\n            iabRef.close();\n          }\n        }\n\n        function resumed() {\n          if (onCloseTimer) {\n            // This code already ran; do not rerun.\n            return;\n          }\n\n          onCloseTimer = window.setTimeout(() => {\n            // Wait two seeconds after resume then reject.\n            reject(_createError(auth, \"redirect-cancelled-by-user\"\n            /* REDIRECT_CANCELLED_BY_USER */\n            ));\n          }, REDIRECT_TIMEOUT_MS);\n        }\n\n        function visibilityChanged() {\n          if ((document === null || document === void 0 ? void 0 : document.visibilityState) === 'visible') {\n            resumed();\n          }\n        } // ATTACH ALL THE LISTENERS =====\n        // Listen for the auth event\n\n\n        eventListener.addPassiveListener(authEventSeen); // Listen for resume and visibility events\n\n        document.addEventListener('resume', resumed, false);\n\n        if (_isAndroid()) {\n          document.addEventListener('visibilitychange', visibilityChanged, false);\n        } // SETUP THE CLEANUP FUNCTION =====\n\n\n        cleanup = () => {\n          eventListener.removePassiveListener(authEventSeen);\n          document.removeEventListener('resume', resumed, false);\n          document.removeEventListener('visibilitychange', visibilityChanged, false);\n\n          if (onCloseTimer) {\n            window.clearTimeout(onCloseTimer);\n          }\n        };\n      });\n    } finally {\n      cleanup();\n    }\n  });\n  return _waitForAppResume2.apply(this, arguments);\n}\n\nfunction _checkCordovaConfiguration(auth) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n\n  const win = _cordovaWindow(); // Check all dependencies installed.\n  // https://github.com/nordnet/cordova-universal-links-plugin\n  // Note that cordova-universal-links-plugin has been abandoned.\n  // A fork with latest fixes is available at:\n  // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\n\n\n  _assert(typeof ((_a = win === null || win === void 0 ? void 0 : win.universalLinks) === null || _a === void 0 ? void 0 : _a.subscribe) === 'function', auth, \"invalid-cordova-configuration\"\n  /* INVALID_CORDOVA_CONFIGURATION */\n  , {\n    missingPlugin: 'cordova-universal-links-plugin-fix'\n  }); // https://www.npmjs.com/package/cordova-plugin-buildinfo\n\n\n  _assert(typeof ((_b = win === null || win === void 0 ? void 0 : win.BuildInfo) === null || _b === void 0 ? void 0 : _b.packageName) !== 'undefined', auth, \"invalid-cordova-configuration\"\n  /* INVALID_CORDOVA_CONFIGURATION */\n  , {\n    missingPlugin: 'cordova-plugin-buildInfo'\n  }); // https://github.com/google/cordova-plugin-browsertab\n\n\n  _assert(typeof ((_e = (_d = (_c = win === null || win === void 0 ? void 0 : win.cordova) === null || _c === void 0 ? void 0 : _c.plugins) === null || _d === void 0 ? void 0 : _d.browsertab) === null || _e === void 0 ? void 0 : _e.openUrl) === 'function', auth, \"invalid-cordova-configuration\"\n  /* INVALID_CORDOVA_CONFIGURATION */\n  , {\n    missingPlugin: 'cordova-plugin-browsertab'\n  });\n\n  _assert(typeof ((_h = (_g = (_f = win === null || win === void 0 ? void 0 : win.cordova) === null || _f === void 0 ? void 0 : _f.plugins) === null || _g === void 0 ? void 0 : _g.browsertab) === null || _h === void 0 ? void 0 : _h.isAvailable) === 'function', auth, \"invalid-cordova-configuration\"\n  /* INVALID_CORDOVA_CONFIGURATION */\n  , {\n    missingPlugin: 'cordova-plugin-browsertab'\n  }); // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\n\n\n  _assert(typeof ((_k = (_j = win === null || win === void 0 ? void 0 : win.cordova) === null || _j === void 0 ? void 0 : _j.InAppBrowser) === null || _k === void 0 ? void 0 : _k.open) === 'function', auth, \"invalid-cordova-configuration\"\n  /* INVALID_CORDOVA_CONFIGURATION */\n  , {\n    missingPlugin: 'cordova-plugin-inappbrowser'\n  });\n}\n/**\r\n * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only\r\n * available in \"secure\" contexts, which covers Cordova (which is served on a file\r\n * protocol).\r\n */\n\n\nfunction computeSha256(_x8) {\n  return _computeSha.apply(this, arguments);\n}\n\nfunction _computeSha() {\n  _computeSha = _asyncToGenerator(function* (sessionId) {\n    const bytes = stringToArrayBuffer(sessionId); // TODO: For IE11 crypto has a different name and this operation comes back\n    //       as an object, not a promise. This is the old proposed standard that\n    //       is used by IE11:\n    // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface\n\n    const buf = yield crypto.subtle.digest('SHA-256', bytes);\n    const arr = Array.from(new Uint8Array(buf));\n    return arr.map(num => num.toString(16).padStart(2, '0')).join('');\n  });\n  return _computeSha.apply(this, arguments);\n}\n\nfunction stringToArrayBuffer(str) {\n  // This function is only meant to deal with an ASCII charset and makes\n  // certain simplifying assumptions.\n  debugAssert(/[0-9a-zA-Z]+/.test(str), 'Can only convert alpha-numeric strings');\n\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder().encode(str);\n  }\n\n  const buff = new ArrayBuffer(str.length);\n  const view = new Uint8Array(buff);\n\n  for (let i = 0; i < str.length; i++) {\n    view[i] = str.charCodeAt(i);\n  }\n\n  return view;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst SESSION_ID_LENGTH = 20;\n/** Custom AuthEventManager that adds passive listeners to events */\n\nclass CordovaAuthEventManager extends AuthEventManager {\n  constructor() {\n    super(...arguments);\n    this.passiveListeners = new Set();\n    this.initPromise = new Promise(resolve => {\n      this.resolveInialized = resolve;\n    });\n  }\n\n  addPassiveListener(cb) {\n    this.passiveListeners.add(cb);\n  }\n\n  removePassiveListener(cb) {\n    this.passiveListeners.delete(cb);\n  } // In a Cordova environment, this manager can live through multiple redirect\n  // operations\n\n\n  resetRedirect() {\n    this.queuedRedirectEvent = null;\n    this.hasHandledPotentialRedirect = false;\n  }\n  /** Override the onEvent method */\n\n\n  onEvent(event) {\n    this.resolveInialized();\n    this.passiveListeners.forEach(cb => cb(event));\n    return super.onEvent(event);\n  }\n\n  initialized() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.initPromise;\n    })();\n  }\n\n}\n/**\r\n * Generates a (partial) {@link AuthEvent}.\r\n */\n\n\nfunction _generateNewEvent(auth, type, eventId = null) {\n  return {\n    type,\n    eventId,\n    urlResponse: null,\n    sessionId: generateSessionId(),\n    postBody: null,\n    tenantId: auth.tenantId,\n    error: _createError(auth, \"no-auth-event\"\n    /* NO_AUTH_EVENT */\n    )\n  };\n}\n\nfunction _savePartialEvent(auth, event) {\n  return storage()._set(persistenceKey(auth), event);\n}\n\nfunction _getAndRemoveEvent(_x9) {\n  return _getAndRemoveEvent2.apply(this, arguments);\n}\n\nfunction _getAndRemoveEvent2() {\n  _getAndRemoveEvent2 = _asyncToGenerator(function* (auth) {\n    const event = yield storage()._get(persistenceKey(auth));\n\n    if (event) {\n      yield storage()._remove(persistenceKey(auth));\n    }\n\n    return event;\n  });\n  return _getAndRemoveEvent2.apply(this, arguments);\n}\n\nfunction _eventFromPartialAndUrl(partialEvent, url) {\n  var _a, _b; // Parse the deep link within the dynamic link URL.\n\n\n  const callbackUrl = _getDeepLinkFromCallback(url); // Confirm it is actually a callback URL.\n  // Currently the universal link will be of this format:\n  // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\n  // This is a fake URL but is not intended to take the user anywhere\n  // and just redirect to the app.\n\n\n  if (callbackUrl.includes('/__/auth/callback')) {\n    // Check if there is an error in the URL.\n    // This mechanism is also used to pass errors back to the app:\n    // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\n    const params = searchParamsOrEmpty(callbackUrl); // Get the error object corresponding to the stringified error if found.\n\n    const errorObject = params['firebaseError'] ? parseJsonOrNull(decodeURIComponent(params['firebaseError'])) : null;\n    const code = (_b = (_a = errorObject === null || errorObject === void 0 ? void 0 : errorObject['code']) === null || _a === void 0 ? void 0 : _a.split('auth/')) === null || _b === void 0 ? void 0 : _b[1];\n    const error = code ? _createError(code) : null;\n\n    if (error) {\n      return {\n        type: partialEvent.type,\n        eventId: partialEvent.eventId,\n        tenantId: partialEvent.tenantId,\n        error,\n        urlResponse: null,\n        sessionId: null,\n        postBody: null\n      };\n    } else {\n      return {\n        type: partialEvent.type,\n        eventId: partialEvent.eventId,\n        tenantId: partialEvent.tenantId,\n        sessionId: partialEvent.sessionId,\n        urlResponse: callbackUrl,\n        postBody: null\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction generateSessionId() {\n  const chars = [];\n  const allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n  for (let i = 0; i < SESSION_ID_LENGTH; i++) {\n    const idx = Math.floor(Math.random() * allowedChars.length);\n    chars.push(allowedChars.charAt(idx));\n  }\n\n  return chars.join('');\n}\n\nfunction storage() {\n  return _getInstance(browserLocalPersistence);\n}\n\nfunction persistenceKey(auth) {\n  return _persistenceKeyName(\"authEvent\"\n  /* AUTH_EVENT */\n  , auth.config.apiKey, auth.name);\n}\n\nfunction parseJsonOrNull(json) {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return null;\n  }\n} // Exported for testing\n\n\nfunction _getDeepLinkFromCallback(url) {\n  const params = searchParamsOrEmpty(url);\n  const link = params['link'] ? decodeURIComponent(params['link']) : undefined; // Double link case (automatic redirect)\n\n  const doubleDeepLink = searchParamsOrEmpty(link)['link']; // iOS custom scheme links.\n\n  const iOSDeepLink = params['deep_link_id'] ? decodeURIComponent(params['deep_link_id']) : undefined;\n  const iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n/**\r\n * Optimistically tries to get search params from a string, or else returns an\r\n * empty search params object.\r\n */\n\n\nfunction searchParamsOrEmpty(url) {\n  if (!(url === null || url === void 0 ? void 0 : url.includes('?'))) {\n    return {};\n  }\n\n  const [_, ...rest] = url.split('?');\n  return querystringDecode(rest.join('?'));\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * How long to wait for the initial auth event before concluding no\r\n * redirect pending\r\n */\n\n\nconst INITIAL_EVENT_TIMEOUT_MS = 500;\n\nclass CordovaPopupRedirectResolver {\n  constructor() {\n    this._redirectPersistence = browserSessionPersistence;\n    this._shouldInitProactively = true; // This is lightweight for Cordova\n\n    this.eventManagers = new Map();\n    this.originValidationPromises = {};\n    this._completeRedirectFn = _getRedirectResult;\n  }\n\n  _initialize(auth) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const key = auth._key();\n\n      let manager = _this2.eventManagers.get(key);\n\n      if (!manager) {\n        manager = new CordovaAuthEventManager(auth);\n\n        _this2.eventManagers.set(key, manager);\n\n        _this2.attachCallbackListeners(auth, manager);\n      }\n\n      return manager;\n    })();\n  }\n\n  _openPopup(auth) {\n    _fail(auth, \"operation-not-supported-in-this-environment\"\n    /* OPERATION_NOT_SUPPORTED */\n    );\n  }\n\n  _openRedirect(auth, provider, authType, eventId) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _checkCordovaConfiguration(auth);\n\n      const manager = yield _this3._initialize(auth);\n      yield manager.initialized(); // Reset the persisted redirect states. This does not matter on Web where\n      // the redirect always blows away application state entirely. On Cordova,\n      // the app maintains control flow through the redirect.\n\n      manager.resetRedirect();\n\n      _clearRedirectOutcomes();\n\n      yield _this3._originValidation(auth);\n\n      const event = _generateNewEvent(auth, authType, eventId);\n\n      yield _savePartialEvent(auth, event);\n      const url = yield _generateHandlerUrl(auth, event, provider);\n      const iabRef = yield _performRedirect(url);\n      return _waitForAppResume(auth, manager, iabRef);\n    })();\n  }\n\n  _isIframeWebStorageSupported(_auth, _cb) {\n    throw new Error('Method not implemented.');\n  }\n\n  _originValidation(auth) {\n    const key = auth._key();\n\n    if (!this.originValidationPromises[key]) {\n      this.originValidationPromises[key] = _validateOrigin(auth);\n    }\n\n    return this.originValidationPromises[key];\n  }\n\n  attachCallbackListeners(auth, manager) {\n    // Get the global plugins\n    const {\n      universalLinks,\n      handleOpenURL,\n      BuildInfo\n    } = _cordovaWindow();\n\n    const noEventTimeout = setTimeout( /*#__PURE__*/_asyncToGenerator(function* () {\n      // We didn't see that initial event. Clear any pending object and\n      // dispatch no event\n      yield _getAndRemoveEvent(auth);\n      manager.onEvent(generateNoEvent());\n    }), INITIAL_EVENT_TIMEOUT_MS);\n\n    const universalLinksCb = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (eventData) {\n        // We have an event so we can clear the no event timeout\n        clearTimeout(noEventTimeout);\n        const partialEvent = yield _getAndRemoveEvent(auth);\n        let finalEvent = null;\n\n        if (partialEvent && (eventData === null || eventData === void 0 ? void 0 : eventData['url'])) {\n          finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);\n        } // If finalEvent is never filled, trigger with no event\n\n\n        manager.onEvent(finalEvent || generateNoEvent());\n      });\n\n      return function universalLinksCb(_x10) {\n        return _ref2.apply(this, arguments);\n      };\n    }(); // Universal links subscriber doesn't exist for iOS, so we need to check\n\n\n    if (typeof universalLinks !== 'undefined' && typeof universalLinks.subscribe === 'function') {\n      universalLinks.subscribe(null, universalLinksCb);\n    } // iOS 7 or 8 custom URL schemes.\n    // This is also the current default behavior for iOS 9+.\n    // For this to work, cordova-plugin-customurlscheme needs to be installed.\n    // https://github.com/EddyVerbruggen/Custom-URL-scheme\n    // Do not overwrite the existing developer's URL handler.\n\n\n    const existingHandleOpenURL = handleOpenURL;\n    const packagePrefix = `${BuildInfo.packageName.toLowerCase()}://`;\n\n    _cordovaWindow().handleOpenURL = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (url) {\n        if (url.toLowerCase().startsWith(packagePrefix)) {\n          // We want this intentionally to float\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          universalLinksCb({\n            url\n          });\n        } // Call the developer's handler if it is present.\n\n\n        if (typeof existingHandleOpenURL === 'function') {\n          try {\n            existingHandleOpenURL(url);\n          } catch (e) {\n            // This is a developer error. Don't stop the flow of the SDK.\n            console.error(e);\n          }\n        }\n      });\n\n      return function (_x11) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n  }\n\n}\n/**\r\n * An implementation of {@link PopupRedirectResolver} suitable for Cordova\r\n * based applications.\r\n *\r\n * @public\r\n */\n\n\nconst cordovaPopupRedirectResolver = CordovaPopupRedirectResolver;\n\nfunction generateNoEvent() {\n  return {\n    type: \"unknown\"\n    /* UNKNOWN */\n    ,\n    eventId: null,\n    sessionId: null,\n    urlResponse: null,\n    postBody: null,\n    tenantId: null,\n    error: _createError(\"no-auth-event\"\n    /* NO_AUTH_EVENT */\n    )\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out\n// of autogenerated documentation pages to reduce accidental misuse.\n\n\nfunction addFrameworkForLogging(auth, framework) {\n  _castAuth(auth)._logFramework(framework);\n}\n\nexport { addFrameworkForLogging, cordovaPopupRedirectResolver };","map":{"version":3,"sources":["/Users/mary/Dropbox/Mac/Documents/lab04/lab04/node_modules/@firebase/auth/dist/esm2017/internal.js"],"names":["ao","_isIOS7Or8","ap","debugAssert","aq","_isIOS","ar","_isAndroid","as","_fail","at","_getRedirectUrl","au","_getProjectConfig","av","_createError","aw","_assert","ax","_getInstance","b","browserLocalPersistence","ay","_persistenceKeyName","az","AuthEventManager","a","browserSessionPersistence","aA","_getRedirectResult","aB","_clearRedirectOutcomes","aC","_castAuth","A","ActionCodeOperation","ac","ActionCodeURL","G","AuthCredential","C","AuthErrorCodes","aE","AuthImpl","aH","AuthPopup","H","EmailAuthCredential","L","EmailAuthProvider","M","FacebookAuthProvider","F","FactorId","aI","FetchProvider","Q","GithubAuthProvider","N","GoogleAuthProvider","I","OAuthCredential","T","OAuthProvider","O","OperationType","J","PhoneAuthCredential","P","PhoneAuthProvider","m","PhoneMultiFactorGenerator","o","ProviderId","R","RecaptchaVerifier","aJ","SAMLAuthCredential","U","SAMLAuthProvider","S","SignInMethod","V","TwitterAuthProvider","aD","UserImpl","aG","_generateEventId","aF","_getClientVersion","a1","applyActionCode","k","browserPopupRedirectResolver","a2","checkActionCode","a0","confirmPasswordReset","E","connectAuthEmulator","a4","createUserWithEmailAndPassword","z","debugErrorMap","y","deleteUser","a9","fetchSignInMethodsForEmail","ak","getAdditionalUserInfo","n","getAuth","ah","getIdToken","ai","getIdTokenResult","am","getMultiFactorResolver","j","getRedirectResult","K","inMemoryPersistence","i","indexedDBLocalPersistence","D","initializeAuth","a7","isSignInWithEmailLink","Y","linkWithCredential","l","linkWithPhoneNumber","d","linkWithPopup","g","linkWithRedirect","an","multiFactor","t","onAuthStateChanged","q","onIdTokenChanged","ad","parseActionCodeURL","B","prodErrorMap","Z","reauthenticateWithCredential","r","reauthenticateWithPhoneNumber","e","reauthenticateWithPopup","h","reauthenticateWithRedirect","al","reload","aa","sendEmailVerification","$","sendPasswordResetEmail","a6","sendSignInLinkToEmail","p","setPersistence","W","signInAnonymously","X","signInWithCredential","_","signInWithCustomToken","a5","signInWithEmailAndPassword","a8","signInWithEmailLink","s","signInWithPhoneNumber","c","signInWithPopup","f","signInWithRedirect","x","signOut","aj","unlink","w","updateCurrentUser","af","updateEmail","ag","updatePassword","u","updatePhoneNumber","ae","updateProfile","v","useDeviceLanguage","ab","verifyBeforeUpdateEmail","a3","verifyPasswordResetCode","querystringDecode","_cordovaWindow","window","REDIRECT_TIMEOUT_MS","_generateHandlerUrl","auth","event","provider","_a","BuildInfo","sessionId","sessionDigest","computeSha256","additionalParams","packageName","displayName","type","undefined","eventId","_validateOrigin","request","iosBundleId","androidPackageName","_performRedirect","handlerUrl","cordova","Promise","resolve","plugins","browsertab","isAvailable","browserTabIsAvailable","iabRef","openUrl","InAppBrowser","open","_waitForAppResume","eventListener","cleanup","reject","onCloseTimer","authEventSeen","closeBrowserTab","close","resumed","setTimeout","visibilityChanged","document","visibilityState","addPassiveListener","addEventListener","removePassiveListener","removeEventListener","clearTimeout","_checkCordovaConfiguration","_b","_c","_d","_e","_f","_g","_h","_j","_k","win","universalLinks","subscribe","missingPlugin","bytes","stringToArrayBuffer","buf","crypto","subtle","digest","arr","Array","from","Uint8Array","map","num","toString","padStart","join","str","test","TextEncoder","encode","buff","ArrayBuffer","length","view","charCodeAt","SESSION_ID_LENGTH","CordovaAuthEventManager","constructor","arguments","passiveListeners","Set","initPromise","resolveInialized","cb","add","delete","resetRedirect","queuedRedirectEvent","hasHandledPotentialRedirect","onEvent","forEach","initialized","_generateNewEvent","urlResponse","generateSessionId","postBody","tenantId","error","_savePartialEvent","storage","_set","persistenceKey","_getAndRemoveEvent","_get","_remove","_eventFromPartialAndUrl","partialEvent","url","callbackUrl","_getDeepLinkFromCallback","includes","params","searchParamsOrEmpty","errorObject","parseJsonOrNull","decodeURIComponent","code","split","chars","allowedChars","idx","Math","floor","random","push","charAt","config","apiKey","name","json","JSON","parse","link","doubleDeepLink","iOSDeepLink","iOSDoubleDeepLink","rest","INITIAL_EVENT_TIMEOUT_MS","CordovaPopupRedirectResolver","_redirectPersistence","_shouldInitProactively","eventManagers","Map","originValidationPromises","_completeRedirectFn","_initialize","key","_key","manager","get","set","attachCallbackListeners","_openPopup","_openRedirect","authType","_originValidation","_isIframeWebStorageSupported","_auth","_cb","Error","handleOpenURL","noEventTimeout","generateNoEvent","universalLinksCb","eventData","finalEvent","existingHandleOpenURL","packagePrefix","toLowerCase","startsWith","console","cordovaPopupRedirectResolver","addFrameworkForLogging","framework","_logFramework"],"mappings":"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","sourcesContent":["import { ao as _isIOS7Or8, ap as debugAssert, aq as _isIOS, ar as _isAndroid, as as _fail, at as _getRedirectUrl, au as _getProjectConfig, av as _createError, aw as _assert, ax as _getInstance, b as browserLocalPersistence, ay as _persistenceKeyName, az as AuthEventManager, a as browserSessionPersistence, aA as _getRedirectResult, aB as _clearRedirectOutcomes, aC as _castAuth } from './index-112b09e1.js';\nexport { A as ActionCodeOperation, ac as ActionCodeURL, G as AuthCredential, C as AuthErrorCodes, aE as AuthImpl, aH as AuthPopup, H as EmailAuthCredential, L as EmailAuthProvider, M as FacebookAuthProvider, F as FactorId, aI as FetchProvider, Q as GithubAuthProvider, N as GoogleAuthProvider, I as OAuthCredential, T as OAuthProvider, O as OperationType, J as PhoneAuthCredential, P as PhoneAuthProvider, m as PhoneMultiFactorGenerator, o as ProviderId, R as RecaptchaVerifier, aJ as SAMLAuthCredential, U as SAMLAuthProvider, S as SignInMethod, V as TwitterAuthProvider, aD as UserImpl, aw as _assert, aC as _castAuth, as as _fail, aG as _generateEventId, aF as _getClientVersion, ax as _getInstance, aA as _getRedirectResult, ay as _persistenceKeyName, a1 as applyActionCode, b as browserLocalPersistence, k as browserPopupRedirectResolver, a as browserSessionPersistence, a2 as checkActionCode, a0 as confirmPasswordReset, E as connectAuthEmulator, a4 as createUserWithEmailAndPassword, z as debugErrorMap, y as deleteUser, a9 as fetchSignInMethodsForEmail, ak as getAdditionalUserInfo, n as getAuth, ah as getIdToken, ai as getIdTokenResult, am as getMultiFactorResolver, j as getRedirectResult, K as inMemoryPersistence, i as indexedDBLocalPersistence, D as initializeAuth, a7 as isSignInWithEmailLink, Y as linkWithCredential, l as linkWithPhoneNumber, d as linkWithPopup, g as linkWithRedirect, an as multiFactor, t as onAuthStateChanged, q as onIdTokenChanged, ad as parseActionCodeURL, B as prodErrorMap, Z as reauthenticateWithCredential, r as reauthenticateWithPhoneNumber, e as reauthenticateWithPopup, h as reauthenticateWithRedirect, al as reload, aa as sendEmailVerification, $ as sendPasswordResetEmail, a6 as sendSignInLinkToEmail, p as setPersistence, W as signInAnonymously, X as signInWithCredential, _ as signInWithCustomToken, a5 as signInWithEmailAndPassword, a8 as signInWithEmailLink, s as signInWithPhoneNumber, c as signInWithPopup, f as signInWithRedirect, x as signOut, aj as unlink, w as updateCurrentUser, af as updateEmail, ag as updatePassword, u as updatePhoneNumber, ae as updateProfile, v as useDeviceLanguage, ab as verifyBeforeUpdateEmail, a3 as verifyPasswordResetCode } from './index-112b09e1.js';\nimport { querystringDecode } from '@firebase/util';\nimport '@firebase/app';\nimport 'tslib';\nimport '@firebase/logger';\nimport '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _cordovaWindow() {\r\n    return window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * How long to wait after the app comes back into focus before concluding that\r\n * the user closed the sign in tab.\r\n */\r\nconst REDIRECT_TIMEOUT_MS = 2000;\r\n/**\r\n * Generates the URL for the OAuth handler.\r\n */\r\nasync function _generateHandlerUrl(auth, event, provider) {\r\n    var _a;\r\n    // Get the cordova plugins\r\n    const { BuildInfo } = _cordovaWindow();\r\n    debugAssert(event.sessionId, 'AuthEvent did not contain a session ID');\r\n    const sessionDigest = await computeSha256(event.sessionId);\r\n    const additionalParams = {};\r\n    if (_isIOS()) {\r\n        // iOS app identifier\r\n        additionalParams['ibi'] = BuildInfo.packageName;\r\n    }\r\n    else if (_isAndroid()) {\r\n        // Android app identifier\r\n        additionalParams['apn'] = BuildInfo.packageName;\r\n    }\r\n    else {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    // Add the display name if available\r\n    if (BuildInfo.displayName) {\r\n        additionalParams['appDisplayName'] = BuildInfo.displayName;\r\n    }\r\n    // Attached the hashed session ID\r\n    additionalParams['sessionId'] = sessionDigest;\r\n    return _getRedirectUrl(auth, provider, event.type, undefined, (_a = event.eventId) !== null && _a !== void 0 ? _a : undefined, additionalParams);\r\n}\r\n/**\r\n * Validates that this app is valid for this project configuration\r\n */\r\nasync function _validateOrigin(auth) {\r\n    const { BuildInfo } = _cordovaWindow();\r\n    const request = {};\r\n    if (_isIOS()) {\r\n        request.iosBundleId = BuildInfo.packageName;\r\n    }\r\n    else if (_isAndroid()) {\r\n        request.androidPackageName = BuildInfo.packageName;\r\n    }\r\n    else {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    // Will fail automatically if package name is not authorized\r\n    await _getProjectConfig(auth, request);\r\n}\r\nfunction _performRedirect(handlerUrl) {\r\n    // Get the cordova plugins\r\n    const { cordova } = _cordovaWindow();\r\n    return new Promise(resolve => {\r\n        cordova.plugins.browsertab.isAvailable(browserTabIsAvailable => {\r\n            let iabRef = null;\r\n            if (browserTabIsAvailable) {\r\n                cordova.plugins.browsertab.openUrl(handlerUrl);\r\n            }\r\n            else {\r\n                // TODO: Return the inappbrowser ref that's returned from the open call\r\n                iabRef = cordova.InAppBrowser.open(handlerUrl, _isIOS7Or8() ? '_blank' : '_system', 'location=yes');\r\n            }\r\n            resolve(iabRef);\r\n        });\r\n    });\r\n}\r\n/**\r\n * This function waits for app activity to be seen before resolving. It does\r\n * this by attaching listeners to various dom events. Once the app is determined\r\n * to be visible, this promise resolves. AFTER that resolution, the listeners\r\n * are detached and any browser tabs left open will be closed.\r\n */\r\nasync function _waitForAppResume(auth, eventListener, iabRef) {\r\n    // Get the cordova plugins\r\n    const { cordova } = _cordovaWindow();\r\n    let cleanup = () => { };\r\n    try {\r\n        await new Promise((resolve, reject) => {\r\n            let onCloseTimer = null;\r\n            // DEFINE ALL THE CALLBACKS =====\r\n            function authEventSeen() {\r\n                var _a;\r\n                // Auth event was detected. Resolve this promise and close the extra\r\n                // window if it's still open.\r\n                resolve();\r\n                const closeBrowserTab = (_a = cordova.plugins.browsertab) === null || _a === void 0 ? void 0 : _a.close;\r\n                if (typeof closeBrowserTab === 'function') {\r\n                    closeBrowserTab();\r\n                }\r\n                // Close inappbrowser emebedded webview in iOS7 and 8 case if still\r\n                // open.\r\n                if (typeof (iabRef === null || iabRef === void 0 ? void 0 : iabRef.close) === 'function') {\r\n                    iabRef.close();\r\n                }\r\n            }\r\n            function resumed() {\r\n                if (onCloseTimer) {\r\n                    // This code already ran; do not rerun.\r\n                    return;\r\n                }\r\n                onCloseTimer = window.setTimeout(() => {\r\n                    // Wait two seeconds after resume then reject.\r\n                    reject(_createError(auth, \"redirect-cancelled-by-user\" /* REDIRECT_CANCELLED_BY_USER */));\r\n                }, REDIRECT_TIMEOUT_MS);\r\n            }\r\n            function visibilityChanged() {\r\n                if ((document === null || document === void 0 ? void 0 : document.visibilityState) === 'visible') {\r\n                    resumed();\r\n                }\r\n            }\r\n            // ATTACH ALL THE LISTENERS =====\r\n            // Listen for the auth event\r\n            eventListener.addPassiveListener(authEventSeen);\r\n            // Listen for resume and visibility events\r\n            document.addEventListener('resume', resumed, false);\r\n            if (_isAndroid()) {\r\n                document.addEventListener('visibilitychange', visibilityChanged, false);\r\n            }\r\n            // SETUP THE CLEANUP FUNCTION =====\r\n            cleanup = () => {\r\n                eventListener.removePassiveListener(authEventSeen);\r\n                document.removeEventListener('resume', resumed, false);\r\n                document.removeEventListener('visibilitychange', visibilityChanged, false);\r\n                if (onCloseTimer) {\r\n                    window.clearTimeout(onCloseTimer);\r\n                }\r\n            };\r\n        });\r\n    }\r\n    finally {\r\n        cleanup();\r\n    }\r\n}\r\n/**\r\n * Checks the configuration of the Cordova environment. This has no side effect\r\n * if the configuration is correct; otherwise it throws an error with the\r\n * missing plugin.\r\n */\r\nfunction _checkCordovaConfiguration(auth) {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\r\n    const win = _cordovaWindow();\r\n    // Check all dependencies installed.\r\n    // https://github.com/nordnet/cordova-universal-links-plugin\r\n    // Note that cordova-universal-links-plugin has been abandoned.\r\n    // A fork with latest fixes is available at:\r\n    // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\r\n    _assert(typeof ((_a = win === null || win === void 0 ? void 0 : win.universalLinks) === null || _a === void 0 ? void 0 : _a.subscribe) === 'function', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-universal-links-plugin-fix'\r\n    });\r\n    // https://www.npmjs.com/package/cordova-plugin-buildinfo\r\n    _assert(typeof ((_b = win === null || win === void 0 ? void 0 : win.BuildInfo) === null || _b === void 0 ? void 0 : _b.packageName) !== 'undefined', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-buildInfo'\r\n    });\r\n    // https://github.com/google/cordova-plugin-browsertab\r\n    _assert(typeof ((_e = (_d = (_c = win === null || win === void 0 ? void 0 : win.cordova) === null || _c === void 0 ? void 0 : _c.plugins) === null || _d === void 0 ? void 0 : _d.browsertab) === null || _e === void 0 ? void 0 : _e.openUrl) === 'function', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-browsertab'\r\n    });\r\n    _assert(typeof ((_h = (_g = (_f = win === null || win === void 0 ? void 0 : win.cordova) === null || _f === void 0 ? void 0 : _f.plugins) === null || _g === void 0 ? void 0 : _g.browsertab) === null || _h === void 0 ? void 0 : _h.isAvailable) === 'function', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-browsertab'\r\n    });\r\n    // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\r\n    _assert(typeof ((_k = (_j = win === null || win === void 0 ? void 0 : win.cordova) === null || _j === void 0 ? void 0 : _j.InAppBrowser) === null || _k === void 0 ? void 0 : _k.open) === 'function', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-inappbrowser'\r\n    });\r\n}\r\n/**\r\n * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only\r\n * available in \"secure\" contexts, which covers Cordova (which is served on a file\r\n * protocol).\r\n */\r\nasync function computeSha256(sessionId) {\r\n    const bytes = stringToArrayBuffer(sessionId);\r\n    // TODO: For IE11 crypto has a different name and this operation comes back\r\n    //       as an object, not a promise. This is the old proposed standard that\r\n    //       is used by IE11:\r\n    // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface\r\n    const buf = await crypto.subtle.digest('SHA-256', bytes);\r\n    const arr = Array.from(new Uint8Array(buf));\r\n    return arr.map(num => num.toString(16).padStart(2, '0')).join('');\r\n}\r\nfunction stringToArrayBuffer(str) {\r\n    // This function is only meant to deal with an ASCII charset and makes\r\n    // certain simplifying assumptions.\r\n    debugAssert(/[0-9a-zA-Z]+/.test(str), 'Can only convert alpha-numeric strings');\r\n    if (typeof TextEncoder !== 'undefined') {\r\n        return new TextEncoder().encode(str);\r\n    }\r\n    const buff = new ArrayBuffer(str.length);\r\n    const view = new Uint8Array(buff);\r\n    for (let i = 0; i < str.length; i++) {\r\n        view[i] = str.charCodeAt(i);\r\n    }\r\n    return view;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SESSION_ID_LENGTH = 20;\r\n/** Custom AuthEventManager that adds passive listeners to events */\r\nclass CordovaAuthEventManager extends AuthEventManager {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.passiveListeners = new Set();\r\n        this.initPromise = new Promise(resolve => {\r\n            this.resolveInialized = resolve;\r\n        });\r\n    }\r\n    addPassiveListener(cb) {\r\n        this.passiveListeners.add(cb);\r\n    }\r\n    removePassiveListener(cb) {\r\n        this.passiveListeners.delete(cb);\r\n    }\r\n    // In a Cordova environment, this manager can live through multiple redirect\r\n    // operations\r\n    resetRedirect() {\r\n        this.queuedRedirectEvent = null;\r\n        this.hasHandledPotentialRedirect = false;\r\n    }\r\n    /** Override the onEvent method */\r\n    onEvent(event) {\r\n        this.resolveInialized();\r\n        this.passiveListeners.forEach(cb => cb(event));\r\n        return super.onEvent(event);\r\n    }\r\n    async initialized() {\r\n        await this.initPromise;\r\n    }\r\n}\r\n/**\r\n * Generates a (partial) {@link AuthEvent}.\r\n */\r\nfunction _generateNewEvent(auth, type, eventId = null) {\r\n    return {\r\n        type,\r\n        eventId,\r\n        urlResponse: null,\r\n        sessionId: generateSessionId(),\r\n        postBody: null,\r\n        tenantId: auth.tenantId,\r\n        error: _createError(auth, \"no-auth-event\" /* NO_AUTH_EVENT */)\r\n    };\r\n}\r\nfunction _savePartialEvent(auth, event) {\r\n    return storage()._set(persistenceKey(auth), event);\r\n}\r\nasync function _getAndRemoveEvent(auth) {\r\n    const event = (await storage()._get(persistenceKey(auth)));\r\n    if (event) {\r\n        await storage()._remove(persistenceKey(auth));\r\n    }\r\n    return event;\r\n}\r\nfunction _eventFromPartialAndUrl(partialEvent, url) {\r\n    var _a, _b;\r\n    // Parse the deep link within the dynamic link URL.\r\n    const callbackUrl = _getDeepLinkFromCallback(url);\r\n    // Confirm it is actually a callback URL.\r\n    // Currently the universal link will be of this format:\r\n    // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\r\n    // This is a fake URL but is not intended to take the user anywhere\r\n    // and just redirect to the app.\r\n    if (callbackUrl.includes('/__/auth/callback')) {\r\n        // Check if there is an error in the URL.\r\n        // This mechanism is also used to pass errors back to the app:\r\n        // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\r\n        const params = searchParamsOrEmpty(callbackUrl);\r\n        // Get the error object corresponding to the stringified error if found.\r\n        const errorObject = params['firebaseError']\r\n            ? parseJsonOrNull(decodeURIComponent(params['firebaseError']))\r\n            : null;\r\n        const code = (_b = (_a = errorObject === null || errorObject === void 0 ? void 0 : errorObject['code']) === null || _a === void 0 ? void 0 : _a.split('auth/')) === null || _b === void 0 ? void 0 : _b[1];\r\n        const error = code ? _createError(code) : null;\r\n        if (error) {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                error,\r\n                urlResponse: null,\r\n                sessionId: null,\r\n                postBody: null\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                sessionId: partialEvent.sessionId,\r\n                urlResponse: callbackUrl,\r\n                postBody: null\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction generateSessionId() {\r\n    const chars = [];\r\n    const allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    for (let i = 0; i < SESSION_ID_LENGTH; i++) {\r\n        const idx = Math.floor(Math.random() * allowedChars.length);\r\n        chars.push(allowedChars.charAt(idx));\r\n    }\r\n    return chars.join('');\r\n}\r\nfunction storage() {\r\n    return _getInstance(browserLocalPersistence);\r\n}\r\nfunction persistenceKey(auth) {\r\n    return _persistenceKeyName(\"authEvent\" /* AUTH_EVENT */, auth.config.apiKey, auth.name);\r\n}\r\nfunction parseJsonOrNull(json) {\r\n    try {\r\n        return JSON.parse(json);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\r\n// Exported for testing\r\nfunction _getDeepLinkFromCallback(url) {\r\n    const params = searchParamsOrEmpty(url);\r\n    const link = params['link'] ? decodeURIComponent(params['link']) : undefined;\r\n    // Double link case (automatic redirect)\r\n    const doubleDeepLink = searchParamsOrEmpty(link)['link'];\r\n    // iOS custom scheme links.\r\n    const iOSDeepLink = params['deep_link_id']\r\n        ? decodeURIComponent(params['deep_link_id'])\r\n        : undefined;\r\n    const iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\r\n    return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\r\n}\r\n/**\r\n * Optimistically tries to get search params from a string, or else returns an\r\n * empty search params object.\r\n */\r\nfunction searchParamsOrEmpty(url) {\r\n    if (!(url === null || url === void 0 ? void 0 : url.includes('?'))) {\r\n        return {};\r\n    }\r\n    const [_, ...rest] = url.split('?');\r\n    return querystringDecode(rest.join('?'));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * How long to wait for the initial auth event before concluding no\r\n * redirect pending\r\n */\r\nconst INITIAL_EVENT_TIMEOUT_MS = 500;\r\nclass CordovaPopupRedirectResolver {\r\n    constructor() {\r\n        this._redirectPersistence = browserSessionPersistence;\r\n        this._shouldInitProactively = true; // This is lightweight for Cordova\r\n        this.eventManagers = new Map();\r\n        this.originValidationPromises = {};\r\n        this._completeRedirectFn = _getRedirectResult;\r\n    }\r\n    async _initialize(auth) {\r\n        const key = auth._key();\r\n        let manager = this.eventManagers.get(key);\r\n        if (!manager) {\r\n            manager = new CordovaAuthEventManager(auth);\r\n            this.eventManagers.set(key, manager);\r\n            this.attachCallbackListeners(auth, manager);\r\n        }\r\n        return manager;\r\n    }\r\n    _openPopup(auth) {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        _checkCordovaConfiguration(auth);\r\n        const manager = await this._initialize(auth);\r\n        await manager.initialized();\r\n        // Reset the persisted redirect states. This does not matter on Web where\r\n        // the redirect always blows away application state entirely. On Cordova,\r\n        // the app maintains control flow through the redirect.\r\n        manager.resetRedirect();\r\n        _clearRedirectOutcomes();\r\n        await this._originValidation(auth);\r\n        const event = _generateNewEvent(auth, authType, eventId);\r\n        await _savePartialEvent(auth, event);\r\n        const url = await _generateHandlerUrl(auth, event, provider);\r\n        const iabRef = await _performRedirect(url);\r\n        return _waitForAppResume(auth, manager, iabRef);\r\n    }\r\n    _isIframeWebStorageSupported(_auth, _cb) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    _originValidation(auth) {\r\n        const key = auth._key();\r\n        if (!this.originValidationPromises[key]) {\r\n            this.originValidationPromises[key] = _validateOrigin(auth);\r\n        }\r\n        return this.originValidationPromises[key];\r\n    }\r\n    attachCallbackListeners(auth, manager) {\r\n        // Get the global plugins\r\n        const { universalLinks, handleOpenURL, BuildInfo } = _cordovaWindow();\r\n        const noEventTimeout = setTimeout(async () => {\r\n            // We didn't see that initial event. Clear any pending object and\r\n            // dispatch no event\r\n            await _getAndRemoveEvent(auth);\r\n            manager.onEvent(generateNoEvent());\r\n        }, INITIAL_EVENT_TIMEOUT_MS);\r\n        const universalLinksCb = async (eventData) => {\r\n            // We have an event so we can clear the no event timeout\r\n            clearTimeout(noEventTimeout);\r\n            const partialEvent = await _getAndRemoveEvent(auth);\r\n            let finalEvent = null;\r\n            if (partialEvent && (eventData === null || eventData === void 0 ? void 0 : eventData['url'])) {\r\n                finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);\r\n            }\r\n            // If finalEvent is never filled, trigger with no event\r\n            manager.onEvent(finalEvent || generateNoEvent());\r\n        };\r\n        // Universal links subscriber doesn't exist for iOS, so we need to check\r\n        if (typeof universalLinks !== 'undefined' &&\r\n            typeof universalLinks.subscribe === 'function') {\r\n            universalLinks.subscribe(null, universalLinksCb);\r\n        }\r\n        // iOS 7 or 8 custom URL schemes.\r\n        // This is also the current default behavior for iOS 9+.\r\n        // For this to work, cordova-plugin-customurlscheme needs to be installed.\r\n        // https://github.com/EddyVerbruggen/Custom-URL-scheme\r\n        // Do not overwrite the existing developer's URL handler.\r\n        const existingHandleOpenURL = handleOpenURL;\r\n        const packagePrefix = `${BuildInfo.packageName.toLowerCase()}://`;\r\n        _cordovaWindow().handleOpenURL = async (url) => {\r\n            if (url.toLowerCase().startsWith(packagePrefix)) {\r\n                // We want this intentionally to float\r\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                universalLinksCb({ url });\r\n            }\r\n            // Call the developer's handler if it is present.\r\n            if (typeof existingHandleOpenURL === 'function') {\r\n                try {\r\n                    existingHandleOpenURL(url);\r\n                }\r\n                catch (e) {\r\n                    // This is a developer error. Don't stop the flow of the SDK.\r\n                    console.error(e);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n/**\r\n * An implementation of {@link PopupRedirectResolver} suitable for Cordova\r\n * based applications.\r\n *\r\n * @public\r\n */\r\nconst cordovaPopupRedirectResolver = CordovaPopupRedirectResolver;\r\nfunction generateNoEvent() {\r\n    return {\r\n        type: \"unknown\" /* UNKNOWN */,\r\n        eventId: null,\r\n        sessionId: null,\r\n        urlResponse: null,\r\n        postBody: null,\r\n        tenantId: null,\r\n        error: _createError(\"no-auth-event\" /* NO_AUTH_EVENT */)\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\r\n// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out\r\n// of autogenerated documentation pages to reduce accidental misuse.\r\nfunction addFrameworkForLogging(auth, framework) {\r\n    _castAuth(auth)._logFramework(framework);\r\n}\n\nexport { addFrameworkForLogging, cordovaPopupRedirectResolver };\n"]},"metadata":{},"sourceType":"module"}