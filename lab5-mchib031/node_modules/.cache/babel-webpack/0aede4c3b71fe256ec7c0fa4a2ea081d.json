{"ast":null,"code":"import _asyncToGenerator from \"/Users/mary/Dropbox/Mac/Documents/lab04/lab04/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, deepEqual } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nclass PlatformLoggerServiceImpl {\n  constructor(container) {\n    this.container = container;\n  } // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n\n\n  getPlatformInfoString() {\n    const providers = this.container.getProviders(); // Loop through providers and get library/version pairs from any that are\n    // version components.\n\n    return providers.map(provider => {\n      if (isVersionServiceProvider(provider)) {\n        const service = provider.getImmediate();\n        return `${service.library}/${service.version}`;\n      } else {\n        return null;\n      }\n    }).filter(logString => logString).join(' ');\n  }\n\n}\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\n\n\nfunction isVersionServiceProvider(provider) {\n  const component = provider.getComponent();\n  return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\"\n  /* VERSION */\n  ;\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.7.3\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nconst logger = new Logger('@firebase/app');\nconst name$n = \"@firebase/app-compat\";\nconst name$m = \"@firebase/analytics-compat\";\nconst name$l = \"@firebase/analytics\";\nconst name$k = \"@firebase/app-check-compat\";\nconst name$j = \"@firebase/app-check\";\nconst name$i = \"@firebase/auth\";\nconst name$h = \"@firebase/auth-compat\";\nconst name$g = \"@firebase/database\";\nconst name$f = \"@firebase/database-compat\";\nconst name$e = \"@firebase/functions\";\nconst name$d = \"@firebase/functions-compat\";\nconst name$c = \"@firebase/installations\";\nconst name$b = \"@firebase/installations-compat\";\nconst name$a = \"@firebase/messaging\";\nconst name$9 = \"@firebase/messaging-compat\";\nconst name$8 = \"@firebase/performance\";\nconst name$7 = \"@firebase/performance-compat\";\nconst name$6 = \"@firebase/remote-config\";\nconst name$5 = \"@firebase/remote-config-compat\";\nconst name$4 = \"@firebase/storage\";\nconst name$3 = \"@firebase/storage-compat\";\nconst name$2 = \"@firebase/firestore\";\nconst name$1 = \"@firebase/firestore-compat\";\nconst name = \"firebase\";\nconst version = \"9.1.2\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\n\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\nconst PLATFORM_LOG_STRING = {\n  [name$o]: 'fire-core',\n  [name$n]: 'fire-core-compat',\n  [name$l]: 'fire-analytics',\n  [name$m]: 'fire-analytics-compat',\n  [name$j]: 'fire-app-check',\n  [name$k]: 'fire-app-check-compat',\n  [name$i]: 'fire-auth',\n  [name$h]: 'fire-auth-compat',\n  [name$g]: 'fire-rtdb',\n  [name$f]: 'fire-rtdb-compat',\n  [name$e]: 'fire-fn',\n  [name$d]: 'fire-fn-compat',\n  [name$c]: 'fire-iid',\n  [name$b]: 'fire-iid-compat',\n  [name$a]: 'fire-fcm',\n  [name$9]: 'fire-fcm-compat',\n  [name$8]: 'fire-perf',\n  [name$7]: 'fire-perf-compat',\n  [name$6]: 'fire-rc',\n  [name$5]: 'fire-rc-compat',\n  [name$4]: 'fire-gcs',\n  [name$3]: 'fire-gcs-compat',\n  [name$2]: 'fire-fst',\n  [name$1]: 'fire-fst-compat',\n  'fire-js': 'fire-js',\n  [name]: 'fire-js-all'\n};\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @internal\r\n */\n\nconst _apps = new Map();\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nconst _components = new Map();\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\n\n\nfunction _addComponent(app, component) {\n  try {\n    app.container.addComponent(component);\n  } catch (e) {\n    logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\n  }\n}\n/**\r\n *\r\n * @internal\r\n */\n\n\nfunction _addOrOverwriteComponent(app, component) {\n  app.container.addOrOverwriteComponent(component);\n}\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\n\n\nfunction _registerComponent(component) {\n  const componentName = component.name;\n\n  if (_components.has(componentName)) {\n    logger.debug(`There were multiple attempts to register component ${componentName}.`);\n    return false;\n  }\n\n  _components.set(componentName, component); // add the component to existing app instances\n\n\n  for (const app of _apps.values()) {\n    _addComponent(app, component);\n  }\n\n  return true;\n}\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\n\n\nfunction _getProvider(app, name) {\n  return app.container.getProvider(name);\n}\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\n\n\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\n\n\nfunction _clearComponents() {\n  _components.clear();\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst ERRORS = {\n  [\"no-app\"\n  /* NO_APP */\n  ]: \"No Firebase App '{$appName}' has been created - \" + 'call Firebase App.initializeApp()',\n  [\"bad-app-name\"\n  /* BAD_APP_NAME */\n  ]: \"Illegal App name: '{$appName}\",\n  [\"duplicate-app\"\n  /* DUPLICATE_APP */\n  ]: \"Firebase App named '{$appName}' already exists with different options or config\",\n  [\"app-deleted\"\n  /* APP_DELETED */\n  ]: \"Firebase App named '{$appName}' already deleted\",\n  [\"invalid-app-argument\"\n  /* INVALID_APP_ARGUMENT */\n  ]: 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.',\n  [\"invalid-log-argument\"\n  /* INVALID_LOG_ARGUMENT */\n  ]: 'First argument to `onLog` must be null or a function.'\n};\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nclass FirebaseAppImpl {\n  constructor(options, config, container) {\n    this._isDeleted = false;\n    this._options = Object.assign({}, options);\n    this._config = Object.assign({}, config);\n    this._name = config.name;\n    this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(new Component('app', () => this, \"PUBLIC\"\n    /* PUBLIC */\n    ));\n  }\n\n  get automaticDataCollectionEnabled() {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name() {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options() {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config() {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container() {\n    return this._container;\n  }\n\n  get isDeleted() {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val) {\n    this._isDeleted = val;\n  }\n  /**\r\n   * This function will throw an Error if the App has already been deleted -\r\n   * use before performing API actions on the App.\r\n   */\n\n\n  checkDestroyed() {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(\"app-deleted\"\n      /* APP_DELETED */\n      , {\n        appName: this._name\n      });\n    }\n  }\n\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\n\n\nconst SDK_VERSION = version;\n\nfunction initializeApp(options, rawConfig = {}) {\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = {\n      name\n    };\n  }\n\n  const config = Object.assign({\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false\n  }, rawConfig);\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(\"bad-app-name\"\n    /* BAD_APP_NAME */\n    , {\n      appName: String(name)\n    });\n  }\n\n  const existingApp = _apps.get(name);\n\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (deepEqual(options, existingApp.options) && deepEqual(config, existingApp.config)) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(\"duplicate-app\"\n      /* DUPLICATE_APP */\n      , {\n        appName: name\n      });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\n\n\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\n  const app = _apps.get(name);\n\n  if (!app) {\n    throw ERROR_FACTORY.create(\"no-app\"\n    /* NO_APP */\n    , {\n      appName: name\n    });\n  }\n\n  return app;\n}\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\n\n\nfunction getApps() {\n  return Array.from(_apps.values());\n}\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\n\n\nfunction deleteApp(_x) {\n  return _deleteApp.apply(this, arguments);\n}\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\n\n\nfunction _deleteApp() {\n  _deleteApp = _asyncToGenerator(function* (app) {\n    const name = app.name;\n\n    if (_apps.has(name)) {\n      _apps.delete(name);\n\n      yield Promise.all(app.container.getProviders().map(provider => provider.delete()));\n      app.isDeleted = true;\n    }\n  });\n  return _deleteApp.apply(this, arguments);\n}\n\nfunction registerVersion(libraryKeyOrName, version, variant) {\n  var _a; // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n\n\n  let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\n\n  if (variant) {\n    library += `-${variant}`;\n  }\n\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n\n  if (libraryMismatch || versionMismatch) {\n    const warning = [`Unable to register library \"${library}\" with version \"${version}\":`];\n\n    if (libraryMismatch) {\n      warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\n    }\n\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n\n    if (versionMismatch) {\n      warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\n    }\n\n    logger.warn(warning.join(' '));\n    return;\n  }\n\n  _registerComponent(new Component(`${library}-version`, () => ({\n    library,\n    version\n  }), \"VERSION\"\n  /* VERSION */\n  ));\n}\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\n\n\nfunction onLog(logCallback, options) {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(\"invalid-log-argument\"\n    /* INVALID_LOG_ARGUMENT */\n    );\n  }\n\n  setUserLogHandler(logCallback, options);\n}\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\n\n\nfunction setLogLevel(logLevel) {\n  setLogLevel$1(logLevel);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction registerCoreComponents(variant) {\n  _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\"\n  /* PRIVATE */\n  )); // Register `app` package.\n\n\n  registerVersion(name$o, version$1, variant); // Register platform SDK identifier (no version).\n\n  registerVersion('fire-js', '');\n}\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\n\n\nregisterCoreComponents();\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };","map":{"version":3,"sources":["/Users/mary/Dropbox/Mac/Documents/lab04/lab04/node_modules/@firebase/app/dist/index.esm2017.js"],"names":["Component","ComponentContainer","Logger","setUserLogHandler","setLogLevel","setLogLevel$1","ErrorFactory","deepEqual","FirebaseError","PlatformLoggerServiceImpl","constructor","container","getPlatformInfoString","providers","getProviders","map","provider","isVersionServiceProvider","service","getImmediate","library","version","filter","logString","join","component","getComponent","type","name$o","version$1","logger","name$n","name$m","name$l","name$k","name$j","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$2","name$1","name","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_apps","Map","_components","_addComponent","app","addComponent","e","debug","_addOrOverwriteComponent","addOrOverwriteComponent","_registerComponent","componentName","has","set","values","_getProvider","getProvider","_removeServiceInstance","instanceIdentifier","clearInstance","_clearComponents","clear","ERRORS","ERROR_FACTORY","FirebaseAppImpl","options","config","_isDeleted","_options","Object","assign","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","val","isDeleted","create","appName","SDK_VERSION","initializeApp","rawConfig","String","existingApp","get","newApp","getApp","getApps","Array","from","deleteApp","delete","Promise","all","registerVersion","libraryKeyOrName","variant","_a","libraryMismatch","match","versionMismatch","warning","push","warn","onLog","logCallback","logLevel","registerCoreComponents","_DEFAULT_ENTRY_NAME"],"mappings":"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","sourcesContent":["import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, deepEqual } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* VERSION */;\r\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.7.3\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$n = \"@firebase/app-compat\";\n\nconst name$m = \"@firebase/analytics-compat\";\n\nconst name$l = \"@firebase/analytics\";\n\nconst name$k = \"@firebase/app-check-compat\";\n\nconst name$j = \"@firebase/app-check\";\n\nconst name$i = \"@firebase/auth\";\n\nconst name$h = \"@firebase/auth-compat\";\n\nconst name$g = \"@firebase/database\";\n\nconst name$f = \"@firebase/database-compat\";\n\nconst name$e = \"@firebase/functions\";\n\nconst name$d = \"@firebase/functions-compat\";\n\nconst name$c = \"@firebase/installations\";\n\nconst name$b = \"@firebase/installations-compat\";\n\nconst name$a = \"@firebase/messaging\";\n\nconst name$9 = \"@firebase/messaging-compat\";\n\nconst name$8 = \"@firebase/performance\";\n\nconst name$7 = \"@firebase/performance-compat\";\n\nconst name$6 = \"@firebase/remote-config\";\n\nconst name$5 = \"@firebase/remote-config-compat\";\n\nconst name$4 = \"@firebase/storage\";\n\nconst name$3 = \"@firebase/storage-compat\";\n\nconst name$2 = \"@firebase/firestore\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"9.1.2\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$o]: 'fire-core',\r\n    [name$n]: 'fire-core-compat',\r\n    [name$l]: 'fire-analytics',\r\n    [name$m]: 'fire-analytics-compat',\r\n    [name$j]: 'fire-app-check',\r\n    [name$k]: 'fire-app-check-compat',\r\n    [name$i]: 'fire-auth',\r\n    [name$h]: 'fire-auth-compat',\r\n    [name$g]: 'fire-rtdb',\r\n    [name$f]: 'fire-rtdb-compat',\r\n    [name$e]: 'fire-fn',\r\n    [name$d]: 'fire-fn-compat',\r\n    [name$c]: 'fire-iid',\r\n    [name$b]: 'fire-iid-compat',\r\n    [name$a]: 'fire-fcm',\r\n    [name$9]: 'fire-fcm-compat',\r\n    [name$8]: 'fire-perf',\r\n    [name$7]: 'fire-perf-compat',\r\n    [name$6]: 'fire-rc',\r\n    [name$5]: 'fire-rc-compat',\r\n    [name$4]: 'fire-gcs',\r\n    [name$3]: 'fire-gcs-compat',\r\n    [name$2]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"bad-app-name\" /* BAD_APP_NAME */]: \"Illegal App name: '{$appName}\",\r\n    [\"duplicate-app\" /* DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(options, rawConfig = {}) {\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        _apps.delete(name);\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$o, version$1, variant);\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents();\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };\n"]},"metadata":{},"sourceType":"module"}